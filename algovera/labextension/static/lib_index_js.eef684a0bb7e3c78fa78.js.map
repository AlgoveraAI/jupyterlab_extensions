{"version":3,"file":"lib_index_js.eef684a0bb7e3c78fa78.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAC0B;AACD;AACe;AACxC;;;;;;;;;;;;;;;;;;ACLmD;AACzB;AAC1B;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAe;AAC9C;AACA;AACA;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA,gBAAgB,0DAAmB,CAAC,uDAAc;AAClD,YAAY,0DAAmB,WAAW,6BAA6B;AACvE,gBAAgB,0DAAmB;AACnC;AACA,oBAAoB,0DAAmB,YAAY,kEAAkE;AACrH,gBAAgB,0DAAmB,YAAY,iCAAiC;AAChF,YAAY,0DAAmB;AAC/B,YAAY,0DAAmB,YAAY,gDAAgD;AAC3F,YAAY,0DAAmB;AAC/B,YAAY,0DAAmB;AAC/B;AACA;AACA;AACA;AACA;AACO,4BAA4B,6DAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAmB;AAClC;AACA;AACA","sources":["webpack://algovera/./lib/index.js","webpack://algovera/./lib/react.js"],"sourcesContent":["// Copyright (c) ipylab contributors\n// Distributed under the terms of the Modified BSD License.\nexport * from \"./version\";\nexport * from \"./widget\";\nexport { EstuaryWidget } from \"./react\";\n//# sourceMappingURL=index.js.map","import { ReactWidget } from \"@jupyterlab/apputils\";\nimport React from \"react\";\n/**\n * React component for Estuary.\n *\n * @returns The React component\n */\nclass EstuaryComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: \"\",\n            file: {},\n            total: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ api: event.target.value });\n    }\n    handleSubmit(event) {\n        alert(\"An API Key was submitted: \" + this.state.api);\n        event.preventDefault();\n    }\n    upload(e) {\n        e.persist();\n        console.log(e.target.files);\n        const formData = new FormData();\n        formData.append(\"data\", e.target.files[0]);\n        // NOTE\n        // This example uses XMLHttpRequest() instead of fetch\n        // because we want to show progress. But you can use\n        // fetch in this example if you like.\n        const xhr = new XMLHttpRequest();\n        xhr.upload.onprogress = (event) => {\n            this.setState({\n                file: event.loaded,\n                total: event.total,\n            });\n        };\n        xhr.open(\"POST\", \"https://shuttle-4.estuary.tech/content/add\");\n        xhr.setRequestHeader(\"Authorization\", `Bearer ${this.state.api}`);\n        xhr.send(formData);\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"form\", { onSubmit: this.handleSubmit },\n                React.createElement(\"label\", null,\n                    \"API Key:\",\n                    React.createElement(\"input\", { type: \"text\", value: this.state.api, onChange: this.handleChange })),\n                React.createElement(\"input\", { type: \"submit\", value: \"Submit\" })),\n            React.createElement(\"br\", null),\n            React.createElement(\"input\", { type: \"file\", onChange: this.upload.bind(this) }),\n            React.createElement(\"br\", null),\n            React.createElement(\"pre\", null, JSON.stringify(this.state.api, null, 1))));\n    }\n}\n/**\n *  Lumino Widget that wraps a EstuaryComponent.\n */\nexport class EstuaryWidget extends ReactWidget {\n    /**\n     * Constructs a new EstuaryWidget.\n     */\n    constructor() {\n        super();\n        this.addClass(\"jp-ReactWidget\");\n    }\n    render() {\n        return React.createElement(EstuaryComponent, null);\n    }\n}\n//# sourceMappingURL=react.js.map"],"names":[],"sourceRoot":""}