{"version":3,"file":"node_modules_requests-helper_lib_index_js.1114c745e723f042e621.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B;AAC/B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB","sources":["webpack://algovera/./node_modules/requests-helper/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_REQUEST_OPTIONS = {\n    blob: false,\n    headers: {\n        Accept: \"application/json, text/javascript, text/plain\",\n    },\n    ignoreCache: false,\n    // default max duration for a request\n    timeout: 5000,\n};\nfunction queryParams(params = {}) {\n    return Object.keys(params)\n        .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n        .join(\"&\");\n}\nfunction withQuery(url, params = {}) {\n    const queryString = queryParams(params);\n    return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\n}\nfunction parseXHRResult(xhr, blob = false) {\n    return {\n        data: blob ? (xhr.response) : (xhr.responseText),\n        headers: xhr.getAllResponseHeaders(),\n        json: () => JSON.parse(xhr.responseText),\n        ok: xhr.status >= 200 && xhr.status < 300,\n        status: xhr.status,\n        statusText: xhr.statusText,\n        url: xhr.responseURL,\n    };\n}\nfunction errorResponse(xhr, message = null) {\n    return {\n        data: message || xhr.statusText,\n        headers: xhr.getAllResponseHeaders(),\n        json: () => JSON.parse(message || xhr.statusText),\n        ok: false,\n        status: xhr.status,\n        statusText: xhr.statusText,\n        url: xhr.responseURL,\n    };\n}\nfunction request(method, url, queryParamsOther = {}, body = null, options = exports.DEFAULT_REQUEST_OPTIONS) {\n    const ignoreCache = options.ignoreCache || exports.DEFAULT_REQUEST_OPTIONS.ignoreCache;\n    const headers = options.headers || exports.DEFAULT_REQUEST_OPTIONS.headers;\n    const timeout = options.timeout || exports.DEFAULT_REQUEST_OPTIONS.timeout;\n    const blob = options.blob || exports.DEFAULT_REQUEST_OPTIONS.blob;\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(method, withQuery(url, queryParamsOther));\n        if (headers) {\n            Object.keys(headers).forEach((key) => xhr.setRequestHeader(key, headers[key]));\n        }\n        if (ignoreCache) {\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        }\n        xhr.timeout = timeout;\n        xhr.onload = (evt) => {\n            resolve(parseXHRResult(xhr, blob));\n        };\n        xhr.onerror = (evt) => {\n            resolve(errorResponse(xhr, \"Failed to make request.\"));\n        };\n        xhr.ontimeout = (evt) => {\n            resolve(errorResponse(xhr, \"Request took longer than expected.\"));\n        };\n        if (method === \"post\" && body) {\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.send(JSON.stringify(body));\n        }\n        else {\n            xhr.send();\n        }\n    });\n}\nexports.request = request;\nfunction requestFormData(url, formdata) {\n    const options = exports.DEFAULT_REQUEST_OPTIONS;\n    const ignoreCache = options.ignoreCache || exports.DEFAULT_REQUEST_OPTIONS.ignoreCache;\n    const headers = options.headers || exports.DEFAULT_REQUEST_OPTIONS.headers;\n    const timeout = options.timeout || exports.DEFAULT_REQUEST_OPTIONS.timeout;\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"post\", withQuery(url, queryParams));\n        Object.keys(headers).forEach((key) => xhr.setRequestHeader(key, headers[key]));\n        if (ignoreCache) {\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        }\n        xhr.timeout = timeout;\n        xhr.onload = (evt) => {\n            resolve(parseXHRResult(xhr));\n        };\n        xhr.onerror = (evt) => {\n            resolve(errorResponse(xhr, \"Failed to make request.\"));\n        };\n        xhr.ontimeout = (evt) => {\n            resolve(errorResponse(xhr, \"Request took longer than expected.\"));\n        };\n        xhr.send(formdata);\n    });\n}\nexports.requestFormData = requestFormData;\n"],"names":[],"sourceRoot":""}