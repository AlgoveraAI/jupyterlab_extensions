{"version":3,"file":"lib_index_js.4ea8b0ffd6801bd542ae.js","mappings":";;;;;;;;;;;;;;;AAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe;AAC9B;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD,SAAS;AACT,KAAK;AACL;AACA,iEAAe,SAAS,EAAC","sources":["webpack://jupyterlab_metamask_extension/./lib/index.js"],"sourcesContent":["import { ICommandPalette } from '@jupyterlab/apputils';\n// const provider = new ethers.providers.Web3Provider(window.ethereum)\n// const signer = provider.getSigner()\n// signer.connect(provider)\n// console.log(signer)\n/**\n * Initialization data for the main menu example.\n */\nconst extension = {\n    id: 'metamask_extension',\n    autoStart: true,\n    requires: [ICommandPalette],\n    activate: (app, palette) => {\n        const { commands } = app;\n        // Add a command\n        const command = 'jlab-examples:main-menu';\n        commands.addCommand(command, {\n            label: 'Execute jlab-examples:main-menu Command',\n            caption: 'Execute jlab-examples:main-menu Command',\n            execute: (args) => {\n                window.ethereum.request({ method: 'eth_requestAccounts' });\n                console.log(`METAMASK EXTENSION LOADED.`);\n                window.alert(`METAMASK EXTENSION LOADED.`);\n            },\n        });\n        // Add the command to the command palette\n        const category = 'Extension Examples';\n        palette.addItem({\n            command,\n            category,\n            args: { origin: 'from the palette' },\n        });\n    },\n};\nexport default extension;\n"],"names":[],"sourceRoot":""}